{
    "paddle.fluid.BuildStrategy": {
        "count": 0,
        "name": "paddle.BuildStrategy"
    },
    "paddle.fluid.CPUPlace": {
        "count": 0,
        "name": "paddle.CPUPlace"
    },
    "paddle.fluid.CUDAPinnedPlace": {
        "count": 0,
        "name": "paddle.CUDAPinnedPlace"
    },
    "paddle.fluid.CUDAPlace": {
        "count": 0,
        "name": "paddle.CUDAPlace"
    },
    "paddle.fluid.CompiledProgram": {
        "count": 0,
        "name": "paddle.CompiledProgram"
    },
    "paddle.fluid.DataFeedDesc": {
        "count": 0,
        "name": "paddle.fluid.DataFeedDesc"
    },
    "paddle.fluid.DataFeeder": {
        "count": 0,
        "name": "paddle.fluid.DataFeeder"
    },
    "paddle.fluid.DistributeTranspiler": {
        "count": 0,
        "name": "paddle.fluid.DistributeTranspiler"
    },
    "paddle.fluid.DistributeTranspilerConfig": {
        "count": 0,
        "name": "paddle.fluid.DistributeTranspilerConfig"
    },
    "paddle.fluid.ExecutionStrategy": {
        "count": 0,
        "name": "paddle.ExecutionStrategy"
    },
    "paddle.fluid.Executor": {
        "count": 0,
        "name": "paddle.Executor"
    },
    "paddle.fluid.LoDTensor": {
        "count": 0,
        "name": "paddle.fluid.LoDTensor"
    },
    "paddle.fluid.LoDTensorArray": {
        "count": 0,
        "name": "paddle.fluid.LoDTensorArray"
    },
    "paddle.fluid.ParallelExecutor": {
        "count": 0,
        "name": "paddle.ParallelExecutor"
    },
    "paddle.fluid.ParamAttr": {
        "count": 0,
        "name": "paddle.ParamAttr"
    },
    "paddle.fluid.Program": {
        "count": 0,
        "name": "paddle.Program"
    },
    "paddle.fluid.Tensor": {
        "count": 0,
        "name": "paddle.fluid.Tensor"
    },
    "paddle.fluid.Variable": {
        "count": 0,
        "name": "paddle.Variable"
    },
    "paddle.fluid.WeightNormParamAttr": {
        "count": 0,
        "name": "paddle.WeightNormParamAttr"
    },
    "paddle.fluid.backward.append_backward": {
        "count": 0,
        "name": "paddle.append_backward"
    },
    "paddle.fluid.backward.gradients": {
        "count": 0,
        "name": "paddle.gradients"
    },
    "paddle.fluid.clip.ErrorClipByValue": {
        "count": 0,
        "name": "paddle.fluid.clip.ErrorClipByValue"
    },
    "paddle.fluid.clip.GradientClipByGlobalNorm": {
        "count": 0,
        "name": "paddle.nn.GradientClipByGlobalNorm"
    },
    "paddle.fluid.clip.GradientClipByNorm": {
        "count": 0,
        "name": "paddle.nn.GradientClipByNorm"
    },
    "paddle.fluid.clip.GradientClipByValue": {
        "count": 0,
        "name": "paddle.nn.GradientClipByValue"
    },
    "paddle.fluid.clip.set_gradient_clip": {
        "count": 0,
        "name": "paddle.fluid.clip.set_gradient_clip"
    },
    "paddle.fluid.cpu_places": {
        "count": 0,
        "name": "paddle.fluid.cpu_places"
    },
    "paddle.fluid.create_lod_tensor": {
        "count": 0,
        "name": "paddle.fluid.create_lod_tensor"
    },
    "paddle.fluid.create_random_int_lodtensor": {
        "count": 0,
        "name": "paddle.fluid.create_random_int_lodtensor"
    },
    "paddle.fluid.cuda_pinned_places": {
        "count": 0,
        "name": "paddle.fluid.cuda_pinned_places"
    },
    "paddle.fluid.cuda_places": {
        "count": 0,
        "name": "paddle.fluid.cuda_places"
    },
    "paddle.fluid.data": {
        "count": 0,
        "name": "paddle.nn.data"
    },
    "paddle.fluid.default_main_program": {
        "count": 0,
        "name": "paddle.default_main_program"
    },
    "paddle.fluid.default_startup_program": {
        "count": 0,
        "name": "paddle.default_startup_program"
    },
    "paddle.fluid.dygraph.BackwardStrategy": {
        "count": 0,
        "name": "paddle.imperative.BackwardStrategy"
    },
    "paddle.fluid.dygraph.BatchNorm": {
        "count": 0,
        "name": "paddle.nn.BatchNorm"
    },
    "paddle.fluid.dygraph.BilinearTensorProduct": {
        "count": 0,
        "name": "paddle.nn.BilinearTensorProduct"
    },
    "paddle.fluid.dygraph.Conv2D": {
        "count": 0,
        "name": "paddle.nn.Conv2D"
    },
    "paddle.fluid.dygraph.Conv2DTranspose": {
        "count": 0,
        "name": "paddle.nn.Conv2DTranspose"
    },
    "paddle.fluid.dygraph.Conv3D": {
        "count": 0,
        "name": "paddle.nn.Conv3D"
    },
    "paddle.fluid.dygraph.Conv3DTranspose": {
        "count": 0,
        "name": "paddle.nn.Conv3DTranspose"
    },
    "paddle.fluid.dygraph.CosineDecay": {
        "count": 0,
        "name": "paddle.imperative.CosineDecay"
    },
    "paddle.fluid.dygraph.Embedding": {
        "count": 0,
        "name": "paddle.nn.Embedding"
    },
    "paddle.fluid.dygraph.ExponentialDecay": {
        "count": 0,
        "name": "paddle.imperative.ExponentialDecay"
    },
    "paddle.fluid.dygraph.GRUUnit": {
        "count": 0,
        "name": "paddle.fluid.dygraph.GRUUnit"
    },
    "paddle.fluid.dygraph.GroupNorm": {
        "count": 0,
        "name": "paddle.nn.GroupNorm"
    },
    "paddle.fluid.dygraph.InverseTimeDecay": {
        "count": 0,
        "name": "paddle.imperative.InverseTimeDecay"
    },
    "paddle.fluid.dygraph.Layer": {
        "count": 0,
        "name": "paddle.nn.Layer"
    },
    "paddle.fluid.dygraph.LayerList": {
        "count": 0,
        "name": "paddle.nn.LayerList"
    },
    "paddle.fluid.dygraph.LayerNorm": {
        "count": 0,
        "name": "paddle.nn.LayerNorm"
    },
    "paddle.fluid.dygraph.Linear": {
        "count": 0,
        "name": "paddle.nn.Linear"
    },
    "paddle.fluid.dygraph.NCE": {
        "count": 0,
        "name": "paddle.fluid.dygraph.NCE"
    },
    "paddle.fluid.dygraph.NaturalExpDecay": {
        "count": 0,
        "name": "paddle.imperative.NaturalExpDecay"
    },
    "paddle.fluid.dygraph.NoamDecay": {
        "count": 0,
        "name": "paddle.imperative.NoamDecay"
    },
    "paddle.fluid.dygraph.PRelu": {
        "count": 0,
        "name": "paddle.fluid.dygraph.PRelu"
    },
    "paddle.fluid.dygraph.ParameterList": {
        "count": 0,
        "name": "paddle.nn.ParameterList"
    },
    "paddle.fluid.dygraph.PiecewiseDecay": {
        "count": 0,
        "name": "paddle.imperative.PiecewiseDecay"
    },
    "paddle.fluid.dygraph.PolynomialDecay": {
        "count": 0,
        "name": "paddle.imperative.PolynomialDecay"
    },
    "paddle.fluid.dygraph.Pool2D": {
        "count": 0,
        "name": "paddle.nn.Pool2D"
    },
    "paddle.fluid.dygraph.Sequential": {
        "count": 0,
        "name": "paddle.nn.Sequential"
    },
    "paddle.fluid.dygraph.SpectralNorm": {
        "count": 0,
        "name": "paddle.nn.SpectralNorm"
    },
    "paddle.fluid.dygraph.TracedLayer": {
        "count": 0,
        "name": "paddle.imperative.TracedLayer"
    },
    "paddle.fluid.dygraph.TreeConv": {
        "count": 0,
        "name": "paddle.fluid.dygraph.TreeConv"
    },
    "paddle.fluid.dygraph.guard": {
        "count": 0,
        "name": "paddle.imperative.guard"
    },
    "paddle.fluid.dygraph.load_dygraph": {
        "count": 0,
        "name": "paddle.imperative.load"
    },
    "paddle.fluid.dygraph.no_grad": {
        "count": 0,
        "name": "paddle.imperative.no_grad"
    },
    "paddle.fluid.dygraph.prepare_context": {
        "count": 0,
        "name": "paddle.imperative.prepare_context"
    },
    "paddle.fluid.dygraph.save_dygraph": {
        "count": 0,
        "name": "paddle.imperative.save"
    },
    "paddle.fluid.dygraph.to_variable": {
        "count": 0,
        "name": "paddle.imperative.to_variable"
    },
    "paddle.fluid.embedding": {
        "count": 0,
        "name": "paddle.fluid.embedding"
    },
    "paddle.fluid.executor.Executor": {
        "count": 0,
        "name": "paddle.Executor"
    },
    "paddle.fluid.executor.global_scope": {
        "count": 0,
        "name": "paddle.global_scope"
    },
    "paddle.fluid.executor.scope_guard": {
        "count": 0,
        "name": "paddle.scope_guard"
    },
    "paddle.fluid.global_scope": {
        "count": 0,
        "name": "paddle.global_scope"
    },
    "paddle.fluid.gradients": {
        "count": 0,
        "name": "paddle.gradients"
    },
    "paddle.fluid.in_dygraph_mode": {
        "count": 0,
        "name": "paddle.in_imperative_mode"
    },
    "paddle.fluid.initializer.Bilinear": {
        "count": 0,
        "name": "paddle.nn.initializer.Bilinear"
    },
    "paddle.fluid.initializer.BilinearInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.BilinearInitializer"
    },
    "paddle.fluid.initializer.Constant": {
        "count": 0,
        "name": "paddle.nn.initializer.Constant"
    },
    "paddle.fluid.initializer.ConstantInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.ConstantInitializer"
    },
    "paddle.fluid.initializer.MSRA": {
        "count": 0,
        "name": "paddle.nn.initializer.MSRA"
    },
    "paddle.fluid.initializer.MSRAInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.MSRAInitializer"
    },
    "paddle.fluid.initializer.Normal": {
        "count": 0,
        "name": "paddle.nn.initializer.Normal"
    },
    "paddle.fluid.initializer.NormalInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.NormalInitializer"
    },
    "paddle.fluid.initializer.NumpyArrayInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.NumpyArrayInitializer"
    },
    "paddle.fluid.initializer.TruncatedNormal": {
        "count": 0,
        "name": "paddle.nn.initializer.TruncatedNormal"
    },
    "paddle.fluid.initializer.TruncatedNormalInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.TruncatedNormalInitializer"
    },
    "paddle.fluid.initializer.Uniform": {
        "count": 0,
        "name": "paddle.nn.initializer.Uniform"
    },
    "paddle.fluid.initializer.UniformInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.UniformInitializer"
    },
    "paddle.fluid.initializer.Xavier": {
        "count": 0,
        "name": "paddle.nn.initializer.Xavier"
    },
    "paddle.fluid.initializer.XavierInitializer": {
        "count": 0,
        "name": "paddle.fluid.initializer.XavierInitializer"
    },
    "paddle.fluid.io.ComposeNotAligned": {
        "count": 0,
        "name": "paddle.reader.ComposeNotAligned"
    },
    "paddle.fluid.io.DataLoader": {
        "count": 0,
        "name": "paddle.io.DataLoader"
    },
    "paddle.fluid.io.PyReader": {
        "count": 0,
        "name": "paddle.fluid.io.PyReader"
    },
    "paddle.fluid.io.batch": {
        "count": 0,
        "name": "paddle.batch"
    },
    "paddle.fluid.io.buffered": {
        "count": 0,
        "name": "paddle.io.buffered"
    },
    "paddle.fluid.io.cache": {
        "count": 0,
        "name": "paddle.io.cache"
    },
    "paddle.fluid.io.chain": {
        "count": 0,
        "name": "paddle.io.chain"
    },
    "paddle.fluid.io.compose": {
        "count": 0,
        "name": "paddle.io.compose"
    },
    "paddle.fluid.io.firstn": {
        "count": 0,
        "name": "paddle.io.firstn"
    },
    "paddle.fluid.io.get_program_parameter": {
        "count": 0,
        "name": "paddle.fluid.io.get_program_parameter"
    },
    "paddle.fluid.io.get_program_persistable_vars": {
        "count": 0,
        "name": "paddle.fluid.io.get_program_persistable_vars"
    },
    "paddle.fluid.io.load": {
        "count": 0,
        "name": "paddle.load"
    },
    "paddle.fluid.io.load_inference_model": {
        "count": 0,
        "name": "paddle.io.load_inference_model"
    },
    "paddle.fluid.io.load_params": {
        "count": 0,
        "name": "paddle.fluid.io.load_params"
    },
    "paddle.fluid.io.load_persistables": {
        "count": 0,
        "name": "paddle.fluid.io.load_persistables"
    },
    "paddle.fluid.io.load_program_state": {
        "count": 0,
        "name": "paddle.io.load_program_state"
    },
    "paddle.fluid.io.load_vars": {
        "count": 0,
        "name": "paddle.fluid.io.load_vars"
    },
    "paddle.fluid.io.map_readers": {
        "count": 0,
        "name": "paddle.io.map_readers"
    },
    "paddle.fluid.io.multiprocess_reader": {
        "count": 0,
        "name": "paddle.reader.multiprocess_reader"
    },
    "paddle.fluid.io.save": {
        "count": 0,
        "name": "paddle.save"
    },
    "paddle.fluid.io.save_inference_model": {
        "count": 0,
        "name": "paddle.io.save_inference_model"
    },
    "paddle.fluid.io.save_params": {
        "count": 0,
        "name": "paddle.fluid.io.save_params"
    },
    "paddle.fluid.io.save_persistables": {
        "count": 0,
        "name": "paddle.fluid.io.save_persistables"
    },
    "paddle.fluid.io.save_vars": {
        "count": 0,
        "name": "paddle.fluid.io.save_vars"
    },
    "paddle.fluid.io.set_program_state": {
        "count": 0,
        "name": "paddle.io.set_program_state"
    },
    "paddle.fluid.io.shuffle": {
        "count": 0,
        "name": "paddle.shuffle"
    },
    "paddle.fluid.io.xmap_readers": {
        "count": 0,
        "name": "paddle.io.xmap_readers"
    },
    "paddle.fluid.is_compiled_with_cuda": {
        "count": 0,
        "name": "paddle.fluid.is_compiled_with_cuda"
    },
    "paddle.fluid.layers.BeamSearchDecoder": {
        "count": 0,
        "name": "paddle.fluid.layers.BeamSearchDecoder"
    },
    "paddle.fluid.layers.Categorical": {
        "count": 0,
        "name": "paddle.fluid.layers.Categorical"
    },
    "paddle.fluid.layers.Decoder": {
        "count": 0,
        "name": "paddle.fluid.layers.Decoder"
    },
    "paddle.fluid.layers.DynamicRNN": {
        "count": 0,
        "name": "paddle.fluid.layers.DynamicRNN"
    },
    "paddle.fluid.layers.GRUCell": {
        "count": 0,
        "name": "paddle.fluid.layers.GRUCell"
    },
    "paddle.fluid.layers.IfElse": {
        "count": 0,
        "name": "paddle.fluid.layers.IfElse"
    },
    "paddle.fluid.layers.LSTMCell": {
        "count": 0,
        "name": "paddle.fluid.layers.LSTMCell"
    },
    "paddle.fluid.layers.MultivariateNormalDiag": {
        "count": 0,
        "name": "paddle.fluid.layers.MultivariateNormalDiag"
    },
    "paddle.fluid.layers.Normal": {
        "count": 0,
        "name": "paddle.nn.initializer.Normal"
    },
    "paddle.fluid.layers.Print": {
        "count": 0,
        "name": "paddle.Print"
    },
    "paddle.fluid.layers.RNNCell": {
        "count": 0,
        "name": "paddle.incubate.hapi.text.RNNCell"
    },
    "paddle.fluid.layers.StaticRNN": {
        "count": 0,
        "name": "paddle.fluid.layers.StaticRNN"
    },
    "paddle.fluid.layers.Switch": {
        "count": 0,
        "name": "paddle.fluid.layers.Switch"
    },
    "paddle.fluid.layers.Uniform": {
        "count": 0,
        "name": "paddle.nn.initializer.Uniform"
    },
    "paddle.fluid.layers.While": {
        "count": 0,
        "name": "paddle.fluid.layers.While"
    },
    "paddle.fluid.layers.abs": {
        "count": 0,
        "name": "paddle.abs"
    },
    "paddle.fluid.layers.accuracy": {
        "count": 0,
        "name": "paddle.metric.accuracy"
    },
    "paddle.fluid.layers.acos": {
        "count": 0,
        "name": "paddle.acos"
    },
    "paddle.fluid.layers.adaptive_pool2d": {
        "count": 0,
        "name": "paddle.nn.functional.adaptive_pool2d"
    },
    "paddle.fluid.layers.adaptive_pool3d": {
        "count": 0,
        "name": "paddle.nn.functional.adaptive_pool3d"
    },
    "paddle.fluid.layers.add_position_encoding": {
        "count": 0,
        "name": "paddle.nn.functional.add_position_encoding"
    },
    "paddle.fluid.layers.affine_channel": {
        "count": 0,
        "name": "paddle.nn.functional.affine_channel"
    },
    "paddle.fluid.layers.affine_grid": {
        "count": 0,
        "name": "paddle.nn.functional.affine_grid"
    },
    "paddle.fluid.layers.anchor_generator": {
        "count": 0,
        "name": "paddle.nn.functional.anchor_generator"
    },
    "paddle.fluid.layers.argmax": {
        "add": {
            "dtype": null,
            "keepdims": false,
            "name": null,
            "out": null
        },
        "count": 0,
        "name": "paddle.argmax",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.layers.argmin": {
        "count": 0,
        "name": "paddle.argmin"
    },
    "paddle.fluid.layers.argsort": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.sort"
    },
    "paddle.fluid.layers.array_length": {
        "count": 0,
        "name": "paddle.fluid.layers.array_length"
    },
    "paddle.fluid.layers.array_read": {
        "count": 0,
        "name": "paddle.fluid.layers.array_read"
    },
    "paddle.fluid.layers.array_write": {
        "count": 0,
        "name": "paddle.fluid.layers.array_write"
    },
    "paddle.fluid.layers.asin": {
        "count": 0,
        "name": "paddle.asin"
    },
    "paddle.fluid.layers.assign": {
        "count": 0,
        "name": "paddle.nn.functional.assign"
    },
    "paddle.fluid.layers.atan": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.atan"
    },
    "paddle.fluid.layers.auc": {
        "count": 0,
        "name": "paddle.metric.auc"
    },
    "paddle.fluid.layers.autoincreased_step_counter": {
        "count": 0,
        "name": "paddle.fluid.layers.autoincreased_step_counter"
    },
    "paddle.fluid.layers.batch_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.batch_norm"
    },
    "paddle.fluid.layers.beam_search": {
        "count": 0,
        "name": "paddle.nn.beam_search"
    },
    "paddle.fluid.layers.beam_search_decode": {
        "count": 0,
        "name": "paddle.nn.beam_search_decode"
    },
    "paddle.fluid.layers.bilinear_tensor_product": {
        "count": 0,
        "name": "paddle.fluid.layers.bilinear_tensor_product"
    },
    "paddle.fluid.layers.bipartite_match": {
        "count": 0,
        "name": "paddle.nn.functional.bipartite_match"
    },
    "paddle.fluid.layers.box_clip": {
        "count": 0,
        "name": "paddle.nn.functional.box_clip"
    },
    "paddle.fluid.layers.box_coder": {
        "count": 0,
        "name": "paddle.nn.functional.box_coder"
    },
    "paddle.fluid.layers.box_decoder_and_assign": {
        "count": 0,
        "name": "paddle.nn.functional.box_decoder_and_assign"
    },
    "paddle.fluid.layers.bpr_loss": {
        "count": 0,
        "name": "paddle.nn.functional.bpr_loss"
    },
    "paddle.fluid.layers.brelu": {
        "count": 0,
        "name": "paddle.nn.functional.brelu"
    },
    "paddle.fluid.layers.case": {
        "count": 0,
        "name": "paddle.nn.case"
    },
    "paddle.fluid.layers.cast": {
        "count": 0,
        "name": "paddle.cast"
    },
    "paddle.fluid.layers.ceil": {
        "count": 0,
        "name": "paddle.ceil"
    },
    "paddle.fluid.layers.center_loss": {
        "count": 0,
        "name": "paddle.nn.functional.center_loss"
    },
    "paddle.fluid.layers.chunk_eval": {
        "count": 0,
        "name": "paddle.metric.chunk_eval"
    },
    "paddle.fluid.layers.clip": {
        "count": 0,
        "name": "paddle.nn.clip"
    },
    "paddle.fluid.layers.clip_by_norm": {
        "count": 0,
        "name": "paddle.nn.clip_by_norm"
    },
    "paddle.fluid.layers.collect_fpn_proposals": {
        "count": 0,
        "name": "paddle.nn.functional.collect_fpn_proposals"
    },
    "paddle.fluid.layers.concat": {
        "count": 0,
        "name": "paddle.concat"
    },
    "paddle.fluid.layers.cond": {
        "count": 0,
        "name": "paddle.nn.cond"
    },
    "paddle.fluid.layers.continuous_value_model": {
        "count": 0,
        "name": "paddle.nn.functional.continuous_value_model"
    },
    "paddle.fluid.layers.conv2d": {
        "count": 0,
        "name": "paddle.nn.functional.conv2d"
    },
    "paddle.fluid.layers.conv2d_transpose": {
        "count": 0,
        "name": "paddle.nn.functional.conv2d_transpose"
    },
    "paddle.fluid.layers.conv3d": {
        "count": 0,
        "name": "paddle.nn.functional.conv3d"
    },
    "paddle.fluid.layers.conv3d_transpose": {
        "count": 0,
        "name": "paddle.nn.functional.conv3d_transpose"
    },
    "paddle.fluid.layers.cos": {
        "count": 0,
        "name": "paddle.cos"
    },
    "paddle.fluid.layers.cos_sim": {
        "count": 0,
        "name": "paddle.metric.cos_sim"
    },
    "paddle.fluid.layers.cosine_decay": {
        "count": 0,
        "name": "paddle.nn.functional.cosine_decay"
    },
    "paddle.fluid.layers.create_array": {
        "count": 0,
        "name": "paddle.fluid.layers.create_array"
    },
    "paddle.fluid.layers.create_global_var": {
        "count": 0,
        "name": "paddle.create_global_var"
    },
    "paddle.fluid.layers.create_parameter": {
        "count": 0,
        "name": "paddle.create_parameter"
    },
    "paddle.fluid.layers.create_py_reader_by_data": {
        "count": 0,
        "name": "paddle.fluid.layers.create_py_reader_by_data"
    },
    "paddle.fluid.layers.create_tensor": {
        "count": 0,
        "name": "paddle.create_tensor"
    },
    "paddle.fluid.layers.crf_decoding": {
        "count": 0,
        "name": "paddle.fluid.layers.crf_decoding"
    },
    "paddle.fluid.layers.crop": {
        "count": 0,
        "name": "paddle.fluid.layers.crop"
    },
    "paddle.fluid.layers.crop_tensor": {
        "count": 0,
        "name": "paddle.crop_tensor"
    },
    "paddle.fluid.layers.cross_entropy": {
        "count": 0,
        "name": "paddle.nn.functional.cross_entropy"
    },
    "paddle.fluid.layers.ctc_greedy_decoder": {
        "count": 0,
        "name": "paddle.fluid.layers.ctc_greedy_decoder"
    },
    "paddle.fluid.layers.cumsum": {
        "count": 0,
        "name": "paddle.cumsum"
    },
    "paddle.fluid.layers.data": {
        "count": 0,
        "name": "paddle.nn.data"
    },
    "paddle.fluid.layers.data_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.data_norm"
    },
    "paddle.fluid.layers.deformable_conv": {
        "count": 0,
        "name": "paddle.fluid.layers.deformable_conv"
    },
    "paddle.fluid.layers.deformable_roi_pooling": {
        "count": 0,
        "name": "paddle.nn.functional.deformable_roi_pooling"
    },
    "paddle.fluid.layers.density_prior_box": {
        "count": 0,
        "name": "paddle.nn.functional.density_prior_box"
    },
    "paddle.fluid.layers.detection_output": {
        "count": 0,
        "name": "paddle.nn.functional.detection_output"
    },
    "paddle.fluid.layers.diag": {
        "count": 0,
        "name": "paddle.diag"
    },
    "paddle.fluid.layers.dice_loss": {
        "count": 0,
        "name": "paddle.nn.functional.dice_loss"
    },
    "paddle.fluid.layers.distribute_fpn_proposals": {
        "count": 0,
        "name": "paddle.nn.functional.distribute_fpn_proposals"
    },
    "paddle.fluid.layers.double_buffer": {
        "count": 0,
        "name": "paddle.fluid.layers.double_buffer"
    },
    "paddle.fluid.layers.dropout": {
        "count": 0,
        "name": "paddle.nn.functional.dropout"
    },
    "paddle.fluid.layers.dynamic_decode": {
        "count": 0,
        "name": "paddle.fluid.layers.dynamic_decode"
    },
    "paddle.fluid.layers.dynamic_gru": {
        "count": 0,
        "name": "paddle.fluid.layers.dynamic_gru"
    },
    "paddle.fluid.layers.dynamic_lstm": {
        "count": 0,
        "name": "paddle.fluid.layers.dynamic_lstm"
    },
    "paddle.fluid.layers.dynamic_lstmp": {
        "count": 0,
        "name": "paddle.fluid.layers.dynamic_lstmp"
    },
    "paddle.fluid.layers.edit_distance": {
        "count": 0,
        "name": "paddle.fluid.layers.edit_distance"
    },
    "paddle.fluid.layers.elementwise_add": {
        "add": {
            "alpha": 1,
            "out": null
        },
        "count": 0,
        "delete": {
            "act=None": null,
            "axis=None": null
        },
        "name": "paddle.add"
    },
    "paddle.fluid.layers.elementwise_div": {
        "add": {
            "out": null
        },
        "count": 0,
        "delete": {
            "act=None": null,
            "axis=None": null
        },
        "name": "paddle.div"
    },
    "paddle.fluid.layers.elementwise_floordiv": {
        "count": 0,
        "name": "paddle.elementwise_floordiv"
    },
    "paddle.fluid.layers.elementwise_max": {
        "count": 0,
        "name": "paddle.elementwise_max"
    },
    "paddle.fluid.layers.elementwise_min": {
        "count": 0,
        "name": "paddle.elementwise_min"
    },
    "paddle.fluid.layers.elementwise_mod": {
        "count": 0,
        "name": "paddle.elementwise_mod"
    },
    "paddle.fluid.layers.elementwise_mul": {
        "count": 0,
        "name": "paddle.elementwise_mul"
    },
    "paddle.fluid.layers.elementwise_pow": {
        "count": 0,
        "name": "paddle.elementwise_pow"
    },
    "paddle.fluid.layers.elementwise_sub": {
        "count": 0,
        "name": "paddle.elementwise_sub"
    },
    "paddle.fluid.layers.elu": {
        "count": 0,
        "name": "paddle.nn.functional.elu"
    },
    "paddle.fluid.layers.embedding": {
        "count": 0,
        "name": "paddle.fluid.embedding"
    },
    "paddle.fluid.layers.equal": {
        "add": {
            "name": null
        },
        "count": 0,
        "delete": {
            "cond=None": null
        },
        "name": "paddle.equal"
    },
    "paddle.fluid.layers.erf": {
        "count": 0,
        "name": "paddle.erf"
    },
    "paddle.fluid.layers.exp": {
        "count": 0,
        "name": "paddle.exp"
    },
    "paddle.fluid.layers.expand": {
        "count": 0,
        "name": "paddle.expand"
    },
    "paddle.fluid.layers.expand_as": {
        "count": 0,
        "name": "paddle.expand_as"
    },
    "paddle.fluid.layers.exponential_decay": {
        "count": 0,
        "name": "paddle.nn.functional.exponential_decay"
    },
    "paddle.fluid.layers.eye": {
        "add": {
            "out": null,
            "stop_gradient": true
        },
        "count": 0,
        "delete": {
            "batch_shape=None": null
        },
        "name": "paddle.tensor.eye",
        "rename": {
            "num_columns": "m",
            "num_row": "n"
        }
    },
    "paddle.fluid.layers.fc": {
        "count": 0,
        "name": "paddle.fluid.layers.fc"
    },
    "paddle.fluid.layers.fill_constant": {
        "count": 0,
        "name": "paddle.fill_constant"
    },
    "paddle.fluid.layers.fill_constant_batch_size_like": {
        "count": 0,
        "name": "paddle.fluid.layers.fill_constant_batch_size_like"
    },
    "paddle.fluid.layers.filter_by_instag": {
        "count": 0,
        "name": "paddle.nn.functional.filter_by_instag"
    },
    "paddle.fluid.layers.flatten": {
        "count": 0,
        "name": "paddle.flatten"
    },
    "paddle.fluid.layers.floor": {
        "count": 0,
        "name": "paddle.floor"
    },
    "paddle.fluid.layers.fsp_matrix": {
        "count": 0,
        "name": "paddle.nn.functional.fsp_matrix"
    },
    "paddle.fluid.layers.gather": {
        "count": 0,
        "name": "paddle.gather"
    },
    "paddle.fluid.layers.gather_nd": {
        "count": 0,
        "name": "paddle.gather_nd"
    },
    "paddle.fluid.layers.gather_tree": {
        "count": 0,
        "name": "paddle.nn.gather_tree"
    },
    "paddle.fluid.layers.gaussian_random": {
        "count": 0,
        "name": "paddle.fluid.layers.gaussian_random"
    },
    "paddle.fluid.layers.gaussian_random_batch_size_like": {
        "count": 0,
        "name": "paddle.fluid.layers.gaussian_random_batch_size_like"
    },
    "paddle.fluid.layers.gelu": {
        "count": 0,
        "name": "paddle.nn.functional.gelu"
    },
    "paddle.fluid.layers.generate_mask_labels": {
        "count": 0,
        "name": "paddle.nn.functional.generate_mask_labels"
    },
    "paddle.fluid.layers.generate_proposal_labels": {
        "count": 0,
        "name": "paddle.nn.functional.generate_proposal_labels"
    },
    "paddle.fluid.layers.generate_proposals": {
        "count": 0,
        "name": "paddle.nn.functional.generate_proposals"
    },
    "paddle.fluid.layers.get_tensor_from_selected_rows": {
        "count": 0,
        "name": "paddle.fluid.layers.get_tensor_from_selected_rows"
    },
    "paddle.fluid.layers.greater_equal": {
        "count": 0,
        "name": "paddle.greater_equal"
    },
    "paddle.fluid.layers.greater_than": {
        "count": 0,
        "name": "paddle.greater_than"
    },
    "paddle.fluid.layers.grid_sampler": {
        "count": 0,
        "name": "paddle.nn.functional.grid_sampler"
    },
    "paddle.fluid.layers.group_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.group_norm"
    },
    "paddle.fluid.layers.gru_unit": {
        "count": 0,
        "name": "paddle.fluid.layers.gru_unit"
    },
    "paddle.fluid.layers.hard_shrink": {
        "count": 0,
        "name": "paddle.nn.functional.hard_shrink"
    },
    "paddle.fluid.layers.hard_sigmoid": {
        "count": 0,
        "name": "paddle.nn.functional.hard_sigmoid"
    },
    "paddle.fluid.layers.hard_swish": {
        "count": 0,
        "name": "paddle.nn.functional.hard_swish"
    },
    "paddle.fluid.layers.has_inf": {
        "count": 0,
        "name": "paddle.has_inf"
    },
    "paddle.fluid.layers.has_nan": {
        "count": 0,
        "name": "paddle.has_nan"
    },
    "paddle.fluid.layers.hash": {
        "count": 0,
        "name": "paddle.nn.functional.hash"
    },
    "paddle.fluid.layers.hsigmoid": {
        "count": 0,
        "name": "paddle.nn.functional.hsigmoid"
    },
    "paddle.fluid.layers.huber_loss": {
        "count": 0,
        "name": "paddle.nn.functional.huber_loss"
    },
    "paddle.fluid.layers.im2sequence": {
        "count": 0,
        "name": "paddle.fluid.layers.im2sequence"
    },
    "paddle.fluid.layers.image_resize": {
        "count": 0,
        "name": "paddle.nn.functional.image_resize"
    },
    "paddle.fluid.layers.image_resize_short": {
        "count": 0,
        "name": "paddle.nn.functional.image_resize_short"
    },
    "paddle.fluid.layers.increment": {
        "count": 0,
        "name": "paddle.increment"
    },
    "paddle.fluid.layers.instance_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.instance_norm"
    },
    "paddle.fluid.layers.inverse_time_decay": {
        "count": 0,
        "name": "paddle.nn.functional.inverse_time_decay"
    },
    "paddle.fluid.layers.iou_similarity": {
        "count": 0,
        "name": "paddle.fluid.layers.iou_similarity"
    },
    "paddle.fluid.layers.is_empty": {
        "count": 0,
        "name": "paddle.is_empty"
    },
    "paddle.fluid.layers.isfinite": {
        "count": 0,
        "name": "paddle.isfinite"
    },
    "paddle.fluid.layers.kldiv_loss": {
        "count": 0,
        "name": "paddle.nn.functional.kldiv_loss"
    },
    "paddle.fluid.layers.l2_normalize": {
        "count": 0,
        "name": "paddle.nn.functional.l2_normalize"
    },
    "paddle.fluid.layers.label_smooth": {
        "count": 0,
        "name": "paddle.nn.functional.label_smooth"
    },
    "paddle.fluid.layers.layer_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.layer_norm"
    },
    "paddle.fluid.layers.leaky_relu": {
        "count": 0,
        "name": "paddle.nn.functional.leaky_relu"
    },
    "paddle.fluid.layers.less_equal": {
        "count": 0,
        "name": "paddle.less_equal"
    },
    "paddle.fluid.layers.less_than": {
        "count": 0,
        "name": "paddle.less_than"
    },
    "paddle.fluid.layers.linear_chain_crf": {
        "count": 0,
        "name": "paddle.fluid.layers.linear_chain_crf"
    },
    "paddle.fluid.layers.linear_lr_warmup": {
        "count": 0,
        "name": "paddle.nn.functional.linear_lr_warmup"
    },
    "paddle.fluid.layers.linspace": {
        "add": {
            "device": null,
            "name": null,
            "out": null
        },
        "count": 0,
        "name": "paddle.linspace"
    },
    "paddle.fluid.layers.load": {
        "count": 0,
        "name": "paddle.load"
    },
    "paddle.fluid.layers.lod_append": {
        "count": 0,
        "name": "paddle.fluid.layers.lod_append"
    },
    "paddle.fluid.layers.lod_reset": {
        "count": 0,
        "name": "paddle.fluid.layers.lod_reset"
    },
    "paddle.fluid.layers.log": {
        "count": 0,
        "name": "paddle.log"
    },
    "paddle.fluid.layers.log_loss": {
        "count": 0,
        "name": "paddle.nn.functional.log_loss"
    },
    "paddle.fluid.layers.logical_and": {
        "count": 0,
        "name": "paddle.logical_and"
    },
    "paddle.fluid.layers.logical_not": {
        "count": 0,
        "name": "paddle.logical_not"
    },
    "paddle.fluid.layers.logical_or": {
        "count": 0,
        "name": "paddle.logical_or"
    },
    "paddle.fluid.layers.logical_xor": {
        "count": 0,
        "name": "paddle.logical_xor"
    },
    "paddle.fluid.layers.logsigmoid": {
        "count": 0,
        "name": "paddle.nn.functional.logsigmoid"
    },
    "paddle.fluid.layers.lrn": {
        "count": 0,
        "name": "paddle.nn.functional.lrn"
    },
    "paddle.fluid.layers.lstm": {
        "count": 0,
        "name": "paddle.fluid.layers.lstm"
    },
    "paddle.fluid.layers.lstm_unit": {
        "count": 0,
        "name": "paddle.fluid.layers.lstm_unit"
    },
    "paddle.fluid.layers.margin_rank_loss": {
        "count": 0,
        "name": "paddle.nn.functional.margin_rank_loss"
    },
    "paddle.fluid.layers.matmul": {
        "count": 0,
        "name": "paddle.matmul"
    },
    "paddle.fluid.layers.maxout": {
        "count": 0,
        "name": "paddle.nn.functional.maxout"
    },
    "paddle.fluid.layers.mean": {
        "count": 0,
        "name": "paddle.mean"
    },
    "paddle.fluid.layers.mean_iou": {
        "count": 0,
        "name": "paddle.metric.mean_iou"
    },
    "paddle.fluid.layers.merge_selected_rows": {
        "count": 0,
        "name": "paddle.fluid.layers.merge_selected_rows"
    },
    "paddle.fluid.layers.mse_loss": {
        "count": 0,
        "name": "paddle.nn.functional.mse_loss"
    },
    "paddle.fluid.layers.mul": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.mul"
    },
    "paddle.fluid.layers.multi_box_head": {
        "count": 0,
        "name": "paddle.fluid.layers.multi_box_head"
    },
    "paddle.fluid.layers.multiclass_nms": {
        "count": 0,
        "name": "paddle.nn.functional.multiclass_nms"
    },
    "paddle.fluid.layers.multiplex": {
        "count": 0,
        "name": "paddle.multiplex"
    },
    "paddle.fluid.layers.natural_exp_decay": {
        "count": 0,
        "name": "paddle.nn.functional.natural_exp_decay"
    },
    "paddle.fluid.layers.nce": {
        "count": 0,
        "name": "paddle.fluid.layers.nce"
    },
    "paddle.fluid.layers.noam_decay": {
        "count": 0,
        "name": "paddle.fluid.layers.noam_decay"
    },
    "paddle.fluid.layers.not_equal": {
        "count": 0,
        "name": "paddle.not_equal"
    },
    "paddle.fluid.layers.npair_loss": {
        "count": 0,
        "name": "paddle.nn.functional.npair_loss"
    },
    "paddle.fluid.layers.one_hot": {
        "count": 0,
        "name": "paddle.nn.functional.one_hot"
    },
    "paddle.fluid.layers.ones": {
        "add": {
            "device": null,
            "out": null
        },
        "count": 0,
        "name": "paddle.ones"
    },
    "paddle.fluid.layers.ones_like": {
        "add": {
            "device": null,
            "dtype": null,
            "name": null
        },
        "count": 0,
        "name": "paddle.ones_like"
    },
    "paddle.fluid.layers.pad": {
        "count": 0,
        "name": "paddle.nn.functional.pad"
    },
    "paddle.fluid.layers.pad2d": {
        "count": 0,
        "name": "paddle.nn.functional.pad2d"
    },
    "paddle.fluid.layers.pad_constant_like": {
        "count": 0,
        "name": "paddle.nn.functional.pad_constant_like"
    },
    "paddle.fluid.layers.piecewise_decay": {
        "count": 0,
        "name": "paddle.nn.functional.piecewise_decay"
    },
    "paddle.fluid.layers.pixel_shuffle": {
        "count": 0,
        "name": "paddle.nn.functional.pixel_shuffle"
    },
    "paddle.fluid.layers.polygon_box_transform": {
        "count": 0,
        "name": "paddle.nn.functional.polygon_box_transform"
    },
    "paddle.fluid.layers.polynomial_decay": {
        "count": 0,
        "name": "paddle.nn.functional.polynomial_decay"
    },
    "paddle.fluid.layers.pool2d": {
        "count": 0,
        "name": "paddle.nn.functional.pool2d"
    },
    "paddle.fluid.layers.pool3d": {
        "count": 0,
        "name": "paddle.nn.functional.pool3d"
    },
    "paddle.fluid.layers.pow": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.pow",
        "rename": {
            "factor": "exponent",
            "x": "input"
        }
    },
    "paddle.fluid.layers.prelu": {
        "count": 0,
        "name": "paddle.fluid.layers.prelu"
    },
    "paddle.fluid.layers.prior_box": {
        "count": 0,
        "name": "paddle.nn.functional.prior_box"
    },
    "paddle.fluid.layers.prroi_pool": {
        "count": 0,
        "name": "paddle.nn.functional.prroi_pool"
    },
    "paddle.fluid.layers.psroi_pool": {
        "count": 0,
        "name": "paddle.nn.functional.psroi_pool"
    },
    "paddle.fluid.layers.py_func": {
        "count": 0,
        "name": "paddle.py_func"
    },
    "paddle.fluid.layers.py_reader": {
        "count": 0,
        "name": "paddle.fluid.layers.py_reader"
    },
    "paddle.fluid.layers.random_crop": {
        "count": 0,
        "name": "paddle.nn.functional.random_crop"
    },
    "paddle.fluid.layers.range": {
        "add": {
            "name": null
        },
        "count": 0,
        "name": "paddle.arange"
    },
    "paddle.fluid.layers.rank": {
        "count": 0,
        "name": "paddle.rank"
    },
    "paddle.fluid.layers.rank_loss": {
        "count": 0,
        "name": "paddle.nn.functional.rank_loss"
    },
    "paddle.fluid.layers.read_file": {
        "count": 0,
        "name": "paddle.fluid.layers.read_file"
    },
    "paddle.fluid.layers.reciprocal": {
        "count": 0,
        "name": "paddle.reciprocal"
    },
    "paddle.fluid.layers.reduce_all": {
        "count": 0,
        "name": "paddle.reduce_all"
    },
    "paddle.fluid.layers.reduce_any": {
        "count": 0,
        "name": "paddle.reduce_any"
    },
    "paddle.fluid.layers.reduce_max": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.max"
    },
    "paddle.fluid.layers.reduce_mean": {
        "count": 0,
        "name": "paddle.reduce_mean"
    },
    "paddle.fluid.layers.reduce_min": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.min"
    },
    "paddle.fluid.layers.reduce_prod": {
        "count": 0,
        "name": "paddle.reduce_prod"
    },
    "paddle.fluid.layers.reduce_sum": {
        "count": 0,
        "name": "paddle.sum",
        "rename": {
            "dim": "axis"
        }
    },
    "paddle.fluid.layers.relu": {
        "count": 0,
        "name": "paddle.nn.functional.relu"
    },
    "paddle.fluid.layers.relu6": {
        "count": 0,
        "name": "paddle.nn.functional.relu6"
    },
    "paddle.fluid.layers.reorder_lod_tensor_by_rank": {
        "count": 0,
        "name": "paddle.fluid.layers.reorder_lod_tensor_by_rank"
    },
    "paddle.fluid.layers.reshape": {
        "count": 0,
        "name": "paddle.reshape"
    },
    "paddle.fluid.layers.resize_bilinear": {
        "count": 0,
        "name": "paddle.nn.functional.resize_bilinear"
    },
    "paddle.fluid.layers.resize_nearest": {
        "count": 0,
        "name": "paddle.nn.functional.resize_nearest"
    },
    "paddle.fluid.layers.resize_trilinear": {
        "count": 0,
        "name": "paddle.nn.functional.resize_trilinear"
    },
    "paddle.fluid.layers.retinanet_detection_output": {
        "count": 0,
        "name": "paddle.nn.functional.retinanet_detection_output"
    },
    "paddle.fluid.layers.retinanet_target_assign": {
        "count": 0,
        "name": "paddle.nn.functional.retinanet_target_assign"
    },
    "paddle.fluid.layers.reverse": {
        "count": 0,
        "name": "paddle.reverse"
    },
    "paddle.fluid.layers.rnn": {
        "count": 0,
        "name": "paddle.fluid.layers.rnn"
    },
    "paddle.fluid.layers.roi_align": {
        "count": 0,
        "name": "paddle.nn.functional.roi_align"
    },
    "paddle.fluid.layers.roi_perspective_transform": {
        "count": 0,
        "name": "paddle.nn.functional.roi_perspective_transform"
    },
    "paddle.fluid.layers.roi_pool": {
        "count": 0,
        "name": "paddle.nn.functional.roi_pool"
    },
    "paddle.fluid.layers.round": {
        "count": 0,
        "name": "paddle.round"
    },
    "paddle.fluid.layers.row_conv": {
        "count": 0,
        "name": "paddle.nn.functional.row_conv"
    },
    "paddle.fluid.layers.rpn_target_assign": {
        "count": 0,
        "name": "paddle.nn.functional.rpn_target_assign"
    },
    "paddle.fluid.layers.rsqrt": {
        "count": 0,
        "name": "paddle.rsqrt"
    },
    "paddle.fluid.layers.sampled_softmax_with_cross_entropy": {
        "count": 0,
        "name": "paddle.nn.functional.sampled_softmax_with_cross_entropy"
    },
    "paddle.fluid.layers.sampling_id": {
        "count": 0,
        "name": "paddle.fluid.layers.sampling_id"
    },
    "paddle.fluid.layers.scale": {
        "count": 0,
        "name": "paddle.scale"
    },
    "paddle.fluid.layers.scatter": {
        "count": 0,
        "name": "paddle.scatter"
    },
    "paddle.fluid.layers.scatter_nd": {
        "count": 0,
        "name": "paddle.scatter_nd"
    },
    "paddle.fluid.layers.scatter_nd_add": {
        "count": 0,
        "name": "paddle.scatter_nd_add"
    },
    "paddle.fluid.layers.selu": {
        "count": 0,
        "name": "paddle.nn.functional.selu"
    },
    "paddle.fluid.layers.sequence_concat": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_concat"
    },
    "paddle.fluid.layers.sequence_conv": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_conv"
    },
    "paddle.fluid.layers.sequence_enumerate": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_enumerate"
    },
    "paddle.fluid.layers.sequence_expand": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_expand"
    },
    "paddle.fluid.layers.sequence_expand_as": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_expand_as"
    },
    "paddle.fluid.layers.sequence_first_step": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_first_step"
    },
    "paddle.fluid.layers.sequence_last_step": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_last_step"
    },
    "paddle.fluid.layers.sequence_mask": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_mask"
    },
    "paddle.fluid.layers.sequence_pad": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_pad"
    },
    "paddle.fluid.layers.sequence_pool": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_pool"
    },
    "paddle.fluid.layers.sequence_reshape": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_reshape"
    },
    "paddle.fluid.layers.sequence_reverse": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_reverse"
    },
    "paddle.fluid.layers.sequence_scatter": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_scatter"
    },
    "paddle.fluid.layers.sequence_slice": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_slice"
    },
    "paddle.fluid.layers.sequence_softmax": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_softmax"
    },
    "paddle.fluid.layers.sequence_unpad": {
        "count": 0,
        "name": "paddle.fluid.layers.sequence_unpad"
    },
    "paddle.fluid.layers.shape": {
        "count": 0,
        "name": "paddle.shape"
    },
    "paddle.fluid.layers.shard_index": {
        "count": 0,
        "name": "paddle.shard_index"
    },
    "paddle.fluid.layers.shuffle": {
        "count": 0,
        "name": "paddle.shuffle"
    },
    "paddle.fluid.layers.shuffle_channel": {
        "count": 0,
        "name": "paddle.nn.functional.shuffle_channel"
    },
    "paddle.fluid.layers.sigmoid": {
        "add": {
            "inplace": false
        },
        "count": 0,
        "name": "paddle.nn.Sigmoid",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.layers.sigmoid_cross_entropy_with_logits": {
        "count": 0,
        "name": "paddle.nn.functional.sigmoid_cross_entropy_with_logits"
    },
    "paddle.fluid.layers.sigmoid_focal_loss": {
        "count": 0,
        "name": "paddle.nn.functional.sigmoid_focal_loss"
    },
    "paddle.fluid.layers.sign": {
        "count": 0,
        "name": "paddle.sign"
    },
    "paddle.fluid.layers.similarity_focus": {
        "count": 0,
        "name": "paddle.nn.functional.similarity_focus"
    },
    "paddle.fluid.layers.sin": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.sin",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.layers.slice": {
        "count": 0,
        "name": "paddle.slice"
    },
    "paddle.fluid.layers.smooth_l1": {
        "count": 0,
        "name": "paddle.nn.functional.smooth_l1"
    },
    "paddle.fluid.layers.soft_relu": {
        "count": 0,
        "name": "paddle.nn.functional.soft_relu"
    },
    "paddle.fluid.layers.softmax": {
        "count": 0,
        "name": "paddle.nn.functional.softmax"
    },
    "paddle.fluid.layers.softmax_with_cross_entropy": {
        "count": 0,
        "name": "paddle.nn.functional.softmax_with_cross_entropy"
    },
    "paddle.fluid.layers.softplus": {
        "count": 0,
        "name": "paddle.nn.functional.softplus"
    },
    "paddle.fluid.layers.softshrink": {
        "count": 0,
        "name": "paddle.nn.functional.softshrink"
    },
    "paddle.fluid.layers.softsign": {
        "count": 0,
        "name": "paddle.nn.functional.softsign"
    },
    "paddle.fluid.layers.space_to_depth": {
        "count": 0,
        "name": "paddle.nn.functional.space_to_depth"
    },
    "paddle.fluid.layers.spectral_norm": {
        "count": 0,
        "name": "paddle.fluid.layers.spectral_norm"
    },
    "paddle.fluid.layers.split": {
        "count": 0,
        "name": "paddle.split"
    },
    "paddle.fluid.layers.sqrt": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.sqrt"
    },
    "paddle.fluid.layers.square": {
        "count": 0,
        "name": "paddle.square"
    },
    "paddle.fluid.layers.square_error_cost": {
        "count": 0,
        "name": "paddle.nn.functional.square_error_cost"
    },
    "paddle.fluid.layers.squeeze": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.squeeze"
    },
    "paddle.fluid.layers.ssd_loss": {
        "count": 0,
        "name": "paddle.nn.functional.ssd_loss"
    },
    "paddle.fluid.layers.stack": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.stack",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.layers.stanh": {
        "count": 0,
        "name": "paddle.stanh"
    },
    "paddle.fluid.layers.strided_slice": {
        "count": 0,
        "name": "paddle.strided_slice"
    },
    "paddle.fluid.layers.sum": {
        "count": 0,
        "name": "paddle.sum"
    },
    "paddle.fluid.layers.sums": {
        "count": 0,
        "name": "paddle.sums"
    },
    "paddle.fluid.layers.swish": {
        "count": 0,
        "name": "paddle.nn.functional.swish"
    },
    "paddle.fluid.layers.switch_case": {
        "count": 0,
        "name": "paddle.nn.switch_case"
    },
    "paddle.fluid.layers.tanh": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.tanh",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.layers.tanh_shrink": {
        "count": 0,
        "name": "paddle.nn.functional.tanh_shrink"
    },
    "paddle.fluid.layers.target_assign": {
        "count": 0,
        "name": "paddle.nn.functional.target_assign"
    },
    "paddle.fluid.layers.teacher_student_sigmoid_loss": {
        "count": 0,
        "name": "paddle.nn.functional.teacher_student_sigmoid_loss"
    },
    "paddle.fluid.layers.temporal_shift": {
        "count": 0,
        "name": "paddle.nn.functional.temporal_shift"
    },
    "paddle.fluid.layers.tensor_array_to_tensor": {
        "count": 0,
        "name": "paddle.fluid.layers.tensor_array_to_tensor"
    },
    "paddle.fluid.layers.thresholded_relu": {
        "count": 0,
        "name": "paddle.nn.functional.thresholded_relu"
    },
    "paddle.fluid.layers.topk": {
        "count": 0,
        "name": "paddle.topk"
    },
    "paddle.fluid.layers.transpose": {
        "count": 0,
        "name": "paddle.transpose"
    },
    "paddle.fluid.layers.unfold": {
        "count": 0,
        "name": "paddle.nn.functional.unfold"
    },
    "paddle.fluid.layers.uniform_random": {
        "count": 0,
        "name": "paddle.fluid.layers.uniform_random"
    },
    "paddle.fluid.layers.uniform_random_batch_size_like": {
        "count": 0,
        "name": "paddle.fluid.layers.uniform_random_batch_size_like"
    },
    "paddle.fluid.layers.unique": {
        "count": 0,
        "name": "paddle.unique"
    },
    "paddle.fluid.layers.unique_with_counts": {
        "count": 0,
        "name": "paddle.unique_with_counts"
    },
    "paddle.fluid.layers.unsqueeze": {
        "add": {
            "out": null
        },
        "count": 0,
        "name": "paddle.unsqueeze"
    },
    "paddle.fluid.layers.unstack": {
        "count": 0,
        "name": "paddle.unstack"
    },
    "paddle.fluid.layers.warpctc": {
        "count": 0,
        "name": "paddle.nn.functional.warpctc"
    },
    "paddle.fluid.layers.where": {
        "count": 0,
        "name": "paddle.where"
    },
    "paddle.fluid.layers.while_loop": {
        "count": 0,
        "name": "paddle.nn.while_loop"
    },
    "paddle.fluid.layers.yolo_box": {
        "count": 0,
        "name": "paddle.nn.functional.yolo_box"
    },
    "paddle.fluid.layers.yolov3_loss": {
        "count": 0,
        "name": "paddle.nn.functional.yolov3_loss"
    },
    "paddle.fluid.layers.zeros": {
        "add": {
            "device": null,
            "out": null
        },
        "count": 0,
        "delete": {
            "None": null,
            "force_cpu": null
        },
        "name": "paddle.zeros"
    },
    "paddle.fluid.layers.zeros_like": {
        "add": {
            "device": null,
            "dtype": null,
            "name": null
        },
        "count": 0,
        "name": "paddle.zeros_like",
        "rename": {
            "x": "input"
        }
    },
    "paddle.fluid.load": {
        "count": 0,
        "name": "paddle.load"
    },
    "paddle.fluid.load_op_library": {
        "count": 0,
        "name": "paddle.fluid.load_op_library"
    },
    "paddle.fluid.memory_optimize": {
        "count": 0,
        "name": "paddle.fluid.memory_optimize"
    },
    "paddle.fluid.metrics.Accuracy": {
        "count": 0,
        "name": "paddle.metric.Accuracy"
    },
    "paddle.fluid.metrics.Auc": {
        "count": 0,
        "name": "paddle.metric.Auc"
    },
    "paddle.fluid.metrics.ChunkEvaluator": {
        "count": 0,
        "name": "paddle.metric.ChunkEvaluator"
    },
    "paddle.fluid.metrics.CompositeMetric": {
        "count": 0,
        "name": "paddle.metric.CompositeMetric"
    },
    "paddle.fluid.metrics.DetectionMAP": {
        "count": 0,
        "name": "paddle.metric.DetectionMAP"
    },
    "paddle.fluid.metrics.EditDistance": {
        "count": 0,
        "name": "paddle.metric.EditDistance"
    },
    "paddle.fluid.metrics.Precision": {
        "count": 0,
        "name": "paddle.metric.Precision"
    },
    "paddle.fluid.metrics.Recall": {
        "count": 0,
        "name": "paddle.metric.Recall"
    },
    "paddle.fluid.name_scope": {
        "count": 0,
        "name": "paddle.name_scope"
    },
    "paddle.fluid.nets.glu": {
        "count": 0,
        "name": "paddle.fluid.nets.glu"
    },
    "paddle.fluid.nets.img_conv_group": {
        "count": 0,
        "name": "paddle.fluid.nets.img_conv_group"
    },
    "paddle.fluid.nets.scaled_dot_product_attention": {
        "count": 0,
        "name": "paddle.fluid.nets.scaled_dot_product_attention"
    },
    "paddle.fluid.nets.sequence_conv_pool": {
        "count": 0,
        "name": "paddle.fluid.nets.sequence_conv_pool"
    },
    "paddle.fluid.nets.simple_img_conv_pool": {
        "count": 0,
        "name": "paddle.fluid.nets.simple_img_conv_pool"
    },
    "paddle.fluid.one_hot": {
        "count": 0,
        "name": "paddle.nn.functional.one_hot"
    },
    "paddle.fluid.optimizer.Adadelta": {
        "count": 0,
        "name": "paddle.optimizer.Adadelta"
    },
    "paddle.fluid.optimizer.AdadeltaOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.AdadeltaOptimizer"
    },
    "paddle.fluid.optimizer.Adagrad": {
        "count": 0,
        "name": "paddle.optimizer.Adagrad"
    },
    "paddle.fluid.optimizer.AdagradOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.AdagradOptimizer"
    },
    "paddle.fluid.optimizer.Adam": {
        "count": 0,
        "name": "paddle.optimizer.Adam"
    },
    "paddle.fluid.optimizer.AdamOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.AdamOptimizer"
    },
    "paddle.fluid.optimizer.Adamax": {
        "count": 0,
        "name": "paddle.optimizer.Adamax"
    },
    "paddle.fluid.optimizer.AdamaxOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.AdamaxOptimizer"
    },
    "paddle.fluid.optimizer.DGCMomentumOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.DGCMomentumOptimizer"
    },
    "paddle.fluid.optimizer.DecayedAdagrad": {
        "count": 0,
        "name": "paddle.optimizer.DecayedAdagrad"
    },
    "paddle.fluid.optimizer.DecayedAdagradOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.DecayedAdagradOptimizer"
    },
    "paddle.fluid.optimizer.Dpsgd": {
        "count": 0,
        "name": "paddle.optimizer.Dpsgd"
    },
    "paddle.fluid.optimizer.DpsgdOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.DpsgdOptimizer"
    },
    "paddle.fluid.optimizer.ExponentialMovingAverage": {
        "count": 0,
        "name": "paddle.optimizer.ExponentialMovingAverage"
    },
    "paddle.fluid.optimizer.Ftrl": {
        "count": 0,
        "name": "paddle.optimizer.Ftrl"
    },
    "paddle.fluid.optimizer.FtrlOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.FtrlOptimizer"
    },
    "paddle.fluid.optimizer.LambOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.LambOptimizer"
    },
    "paddle.fluid.optimizer.LarsMomentum": {
        "count": 0,
        "name": "paddle.optimizer.LarsMomentum"
    },
    "paddle.fluid.optimizer.LarsMomentumOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.LarsMomentumOptimizer"
    },
    "paddle.fluid.optimizer.LookaheadOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.LookaheadOptimizer"
    },
    "paddle.fluid.optimizer.ModelAverage": {
        "count": 0,
        "name": "paddle.optimizer.ModelAverage"
    },
    "paddle.fluid.optimizer.Momentum": {
        "count": 0,
        "name": "paddle.optimizer.Momentum"
    },
    "paddle.fluid.optimizer.MomentumOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.MomentumOptimizer"
    },
    "paddle.fluid.optimizer.PipelineOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.PipelineOptimizer"
    },
    "paddle.fluid.optimizer.RMSPropOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.RMSPropOptimizer"
    },
    "paddle.fluid.optimizer.RecomputeOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.RecomputeOptimizer"
    },
    "paddle.fluid.optimizer.SGD": {
        "count": 0,
        "name": "paddle.optimizer.SGD"
    },
    "paddle.fluid.optimizer.SGDOptimizer": {
        "count": 0,
        "name": "paddle.optimizer.SGDOptimizer"
    },
    "paddle.fluid.profiler.cuda_profiler": {
        "count": 0,
        "name": "paddle.fluid.profiler.cuda_profiler"
    },
    "paddle.fluid.profiler.profiler": {
        "count": 0,
        "name": "paddle.fluid.profiler.profiler"
    },
    "paddle.fluid.profiler.reset_profiler": {
        "count": 0,
        "name": "paddle.fluid.profiler.reset_profiler"
    },
    "paddle.fluid.profiler.start_profiler": {
        "count": 0,
        "name": "paddle.fluid.profiler.start_profiler"
    },
    "paddle.fluid.profiler.stop_profiler": {
        "count": 0,
        "name": "paddle.fluid.profiler.stop_profiler"
    },
    "paddle.fluid.program_guard": {
        "count": 0,
        "name": "paddle.program_guard"
    },
    "paddle.fluid.regularizer.L1Decay": {
        "count": 0,
        "name": "paddle.fluid.regularizer.L1Decay"
    },
    "paddle.fluid.regularizer.L1DecayRegularizer": {
        "count": 0,
        "name": "paddle.fluid.regularizer.L1DecayRegularizer"
    },
    "paddle.fluid.regularizer.L2Decay": {
        "count": 0,
        "name": "paddle.fluid.regularizer.L2Decay"
    },
    "paddle.fluid.regularizer.L2DecayRegularizer": {
        "count": 0,
        "name": "paddle.fluid.regularizer.L2DecayRegularizer"
    },
    "paddle.fluid.release_memory": {
        "count": 0,
        "name": "paddle.fluid.release_memory"
    },
    "paddle.fluid.require_version": {
        "count": 0,
        "name": "paddle.fluid.require_version"
    },
    "paddle.fluid.save": {
        "count": 0,
        "name": "paddle.save"
    },
    "paddle.fluid.scope_guard": {
        "count": 0,
        "name": "paddle.scope_guard"
    },
    "paddle.fluid.transpiler.DistributeTranspiler": {
        "count": 0,
        "name": "paddle.fluid.DistributeTranspiler"
    },
    "paddle.fluid.transpiler.DistributeTranspilerConfig": {
        "count": 0,
        "name": "paddle.fluid.DistributeTranspilerConfig"
    },
    "paddle.fluid.transpiler.HashName": {
        "count": 0,
        "name": "paddle.fluid.transpiler.HashName"
    },
    "paddle.fluid.transpiler.RoundRobin": {
        "count": 0,
        "name": "paddle.fluid.transpiler.RoundRobin"
    },
    "paddle.fluid.transpiler.memory_optimize": {
        "count": 0,
        "name": "paddle.fluid.memory_optimize"
    },
    "paddle.fluid.transpiler.release_memory": {
        "count": 0,
        "name": "paddle.fluid.release_memory"
    },
    "paddle.fluid.unique_name.generate": {
        "count": 0,
        "name": "paddle.fluid.unique_name.generate"
    },
    "paddle.fluid.unique_name.guard": {
        "count": 0,
        "name": "paddle.imperative.guard"
    },
    "paddle.fluid.dygraph.nn.Conv2D":{
        "count": 0
    },
    "paddle.fluid.dygraph.nn.Linear":{
        "name":"paddle.fluid.dygraph.nn.Linear",
        "count": 0
    },
    "paddle.fluid.dygraph.nn.Pool2D":{"count": 0},
    "paddle.fluid.dygraph.guard":{"count": 0},
    "paddle.fluid.param_attr.ParamAttr":{"count": 0},
    "paddle.fluid.dygraph.base.to_variable":{"count": 0},
    "paddle.fluid.dygraph.parallel.prepare_context":{"count": 0},
    "paddle.fluid.dygraph.parallel.DataParallel":{"count": 0}

}
